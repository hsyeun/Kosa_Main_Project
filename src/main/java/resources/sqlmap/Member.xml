<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mSQL">

	<!-- 로그인 검사 -->
	<select id="getLogin" resultType="int" parameterType="app.member.MemberVO">
	<![CDATA[
		SELECT
			count(*)
		FROM
			user
		WHERE
			identification = #{identification}
			AND password = #{password}
	]]>
	</select>	
		
	<!-- 회원추가 -->
	<insert id="addMember" parameterType="app.member.MemberVO">

		INSERT INTO
			user( identification, password, name, email, phone, sc_index, i_index)
		VALUES(
			#{identification}, #{password}, #{name}, 
			#{email}, #{phone}, #{sc_index}, #{i_index}
		)
	</insert>
		
	<!-- 기업 분류 -->
	<select id="company" resultType="app.member.CategoryVO">
		SELECT
			*
		FROM
			com_category
			--
	</select>
		
	<!-- 산업 분류 -->
	<select id="industry" resultType="app.member.CategoryVO">
		SELECT
			*
		FROM
			industry
	</select>
		
	<!-- 카테고리 대분류 -->
	<select id="bigCate" resultType="app.member.CategoryVO">
		SELECT
			*
		FROM
			main_category
	</select>
		
	<!-- 카테고리 소분류 -->
	<select id="smallCate" resultType="app.member.CategoryVO" parameterType="int">
		SELECT
			s.index, s.category, s.mc_index
		FROM
			main_category m, sub_category s
		WHERE
			m.index = mc_index
			AND  mc_index = #{m.index}
	</select>
		
	<!-- 이력서(스펙) 데이터 추가 -->
	<insert id="addResume" parameterType="app.member.ResumeVO">
		INSERT INTO
			user_spec( identification, grade, toeic, toeic_speak, opic_grade, 
					  etc, overseas_exp, intern, prize, volunteer, 
					  certificate, education, career)
		VALUES(
			#{identification}, #{grade}, #{toeic}, #{toeic_speak}, #{opic_grade},
			#{etc}, #{overseas_exp}, #{intern}, #{prize}, #{volunteer},
			#{certificate}, #{education}, #{career}
		)
	</insert>
		
	<!-- 회원계정에 이력서(스펙) 추가 -->
	<update id="addUserResume" parameterType="app.member.MemberVO">
		update user
		set spec_index = #{spec_index}
		where identification = #{identification}
	</update>
	
	<!-- 회원계정에 이력서(스펙) 추가 -->
	<select id="getSpecIndex" parameterType="app.member.MemberVO">
		select index
		from user_spec
	</select>
	
	<!-- 내 정보 조회 -->
	<select id="getMyInfo" resultType="app.member.MemberVO" parameterType="string">
		SELECT
			identification, password, name, email, phone, sc_index, i_index, company_rec
		FROM
			user
		WHERE
			identification = #{identification}
	</select>
	
	<!-- 내 이력 정보 조회 -->
	<select id="getMyResumeInfo" resultType="app.member.ResumeVO" parameterType="string">
		SELECT
			*
		FROM
			user_spec
		WHERE
			identification = #{identification}
	</select>
	
	<!-- 내 정보 수정 -->
	<update id="myInfoEdit" parameterType="app.member.MemberVO">
		UPDATE
			user
		<set>
			password = #{password},
			email = #{email},
			phone = #{phone},
			sc_index = #{sc_index},
			i_index = #{i_index}
		</set>
		WHERE
			identification = #{identification}
	</update>
	
	<!-- 나의 정보 삭제 -->
	<update id="myInfoDel" parameterType="string">
		UPDATE
			user
		<set>
			is_show='1'
		</set>
		WHERE
			identification = #{identification}
	</update>
	
		
	<!-- 아이디 찾기 -->
	<select id="forgotId" resultType="app.member.MemberVO" parameterType="app.member.MemberVO">
		SELECT
			identification
		FROM
			user
		WHERE
			name = #{name}
			AND email = #{email}
			AND is_show='0'
	</select>
	
		
	<!-- 비밀번호 찾기 -->
	<select id="loginFindPw" resultType="String" parameterType="app.member.MemberVO">
		SELECT
			email
		FROM
			user
		WHERE
			identification = #{identification}
			AND phone = #{phone}
			AND is_show='0'
	</select>
	
	<!-- 임시비밀번호 저장 -->
	<update id="editPw" parameterType="app.member.MemberVO">
		UPDATE
			user
		<set>
			password = #{password}
		</set>
		WHERE
			identification = #{identification}
	</update>
	
	<!-- 자소서 조회 -->
	<select id="getCovers" resultType="app.member.CoverVO" parameterType="app.member.MemberVO">
		SELECT
			uct.u_index, uct.content, ut.`index`, ut.identification
		FROM
			user_cover_letter uct
		LEFT JOIN
			user ut
		ON 
			uct.u_index = ut.`index`
		WHERE
			ut.identification = #{identification}
	</select>
	
	<!-- 자소서 제거 -->
	<delete id="deleteCover" parameterType="app.member.MemberVO">
		Delete
		FROM
			user_cover_letter
		WHERE
			identification = #{identification}
	</delete>
	<!-- 유저의 추천 기업 -->
   <select id="getRecCompany" parameterType="app.member.ResumeVO" resultType="Integer">
      <![CDATA[
      select
         ct.index 
      from
         itjob.company ct
      join itjob.company_spec cs
         on ct.`index` =cs.com_index
      ORDER by
         ABS(cs.grade - #{grade }) , ABS(cs.toeic - #{toeic }),cs.toeic_speak = #{toeic_speak} ,cs.opic_grade = #{opic_grade} ,ABS( cs.etc - #{etc}),ABS( cs.overseas_exp - #{overseas_exp}),ABS( cs.intern - #{intern}) ,ABS(cs.prize - #{prize}) ,ABS( cs.volunteer - #{volunteer}) ,ABS( cs.certificate - #{certificate})
      limit 1
      ]]>
   </select>
      <!-- 회원계정에 추천기업 데이터 추가 -->
   <update id="addRecCompany" parameterType="app.member.ResumeVO">
      update user
         set company_rec = #{company_rec}
      where
         identification = #{identification}
   </update>
	
	
</mapper>

